name: build openwrt

on:
  workflow_dispatch:
    inputs:
      rep_url:
        description: '仓库地址'     
        required: true
        default: 'https://github.com/JiaY-shi/owrt.git'
      branch_name:
        description: '分支'     
        required: true
        default: 'ipq60xx-devel'
      config_file:
        description: '配置文件'     
        required: true
        default: 'jdc_ax1800-pro.nss.config' 

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: update
      run: |
        sudo apt update
        sudo apt install build-essential libncurses5-dev gawk git libssl-dev gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools python3-yaml -y
        git config --global user.email "shi05275@163.com"
        git config --global user.name "JiaY-shi"
        git config --global credential.helper store
        echo ${{ secrets.GIT_URL_TOKEN }} > ~/.git-credentials
        
        sudo apt autoclean
        sudo apt autoremove --purge
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - name: make 
      run: |
        CRTDIR=$(pwd)
        git clone -b ${{ inputs.branch_name }} ${{ inputs.rep_url }} ~/openwrt
        cp -rf feeds.conf ~/openwrt
        cd ~/openwrt
        ./scripts/feeds update -a && ./scripts/feeds install -a
        cp -rf $CRTDIR/${{ inputs.config_file }} ~/openwrt/.config
        make defconfig
        make -j$(expr $(nproc) + 1) V=s
        
    - name: Organize files
      id: organize
      if: true && !failure() && !cancelled()
      run: |
        cd ~/openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT 
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled() && !failure()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: true && !failure() && !cancelled()
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT 
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled() && !failure()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        files: ${{ env.FIRMWARE }}/*
